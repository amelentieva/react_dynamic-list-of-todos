{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","selectTodo","selectedTodoId","className","map","todo","classNames","id","completed","title","type","onClick","TodoFilter","query","onSetSearch","onsetQuery","onChange","event","target","value","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","unSelectTodo","useState","currentUser","setUser","useEffect","userId","href","email","name","App","setTodos","searchFilter","setSearchFilter","setQuery","selectedTodo","setSelectedTodo","lowerCasequery","toLocaleLowerCase","displayedTodos","filter","toLowerCase","includes","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8dc5dd70.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  selectTodo: (todo: Todo) => void;\n  selectedTodoId?: number;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectTodo,\n  selectedTodoId,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos?.map(todo => (\n        <tr\n          key={todo.id}\n          data-cy=\"todo\"\n          className={classNames(\n            {\n              'has-background-info-light': selectedTodoId === todo.id,\n            },\n          )}\n        >\n          <td className=\"is-vcentered\">{todo.id}</td>\n          <td className=\"is-vcentered\">\n            {todo.completed && (\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            )}\n          </td>\n          <td className=\"is-vcentered is-expanded\">\n            <p className={classNames(\n              {\n                'has-text-danger': !todo.completed,\n                'has-text-success': todo.completed,\n              },\n            )}\n            >\n              {todo.title}\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => {\n                selectTodo(todo);\n              }}\n            >\n              <span className=\"icon\">\n                {selectedTodoId === todo.id\n                  ? (<i className=\"far fa-eye-slash\" />)\n                  : (<i className=\"far fa-eye\" />)}\n              </span>\n            </button>\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","type Props = {\n  query: string;\n  onSetSearch: (value: string) => void;\n  onsetQuery: (value: string) => void;\n};\n\nexport const TodoFilter:React.FC<Props> = ({\n  query,\n  onSetSearch,\n  onsetQuery,\n}) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          onChange={(event) => onSetSearch(event.target.value)}\n        >\n          <option value=\"All\">\n            All\n          </option>\n\n          <option value=\"Active\">\n            Active\n          </option>\n\n          <option value=\"Completed\">\n            Completed\n          </option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={query}\n        onChange={(event) => onsetQuery(event.target.value)}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      {query && (\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={() => onsetQuery('')}\n          />\n        </span>\n      )}\n    </p>\n  </form>\n);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(1000)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\n\ntype Props = {\n  todo: Todo;\n  unSelectTodo: () => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({ unSelectTodo, todo }) => {\n  const [currentUser, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    getUser(todo.userId).then(setUser);\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!currentUser ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              onClick={() => {\n                unSelectTodo();\n              }}\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {todo.completed\n                ? (<strong className=\"has-text-success\">Done</strong>)\n                : (<strong className=\"has-text-danger\">Planned</strong>)}\n\n              {' by '}\n\n              <a href={`mailto:${currentUser.email}`}>\n                {currentUser.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [searchFilter, setSearchFilter] = useState('All');\n  const [query, setQuery] = useState('');\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n\n  useEffect(() => {\n    getTodos().then(setTodos);\n  }, []);\n\n  const lowerCasequery = query.toLocaleLowerCase();\n\n  const displayedTodos = todos.filter(todo => {\n    if ((searchFilter === 'Active' && todo.completed)\n    || (searchFilter === 'Completed' && !todo.completed)) {\n      return false;\n    }\n\n    return todo.title.toLowerCase().includes(lowerCasequery);\n  });\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                onSetSearch={setSearchFilter}\n                onsetQuery={setQuery}\n              />\n            </div>\n\n            <div className=\"block\">\n              {todos.length > 0\n                ? (\n                  <TodoList\n                    todos={displayedTodos}\n                    selectedTodoId={selectedTodo?.id}\n                    selectTodo={setSelectedTodo}\n                  />\n                ) : (\n                  <Loader />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo?.id && (\n        <TodoModal\n          unSelectTodo={() => setSelectedTodo(null)}\n          todo={selectedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}